1 - select boolean
stmt s;
Select BOOLEAN
TRUE
5000
2 - select tuple
assign a; call cl;
Select <a, cl>
8 4, 8 5, 8 6, 8 10, 8 17, 11 4, 11 5, 11 6, 11 10, 11 17, 16 4, 16 5, 16 6, 16 10, 16 17
5000
3 - multi clause (pattern before such-that)
assign a; stmt s; variable v;
Select a pattern a (v, _) such that Uses(s, v)
8, 11
5000
4 - explicit and
stmt s;
Select s such that Modifies(s, _) and Uses(s, _)
4, 6, 7, 8, 10, 11, 12
5000
5 - with-cl
read r; procedure p;
Select r with r.varName = p.procName
1, 18
5000
6 - pattern sub-expression for assignment (partial)
assign a;
Select a pattern a (_, _"x + 1"_)
8, 11
5000
7 - pattern sub-expression for assignment (full)
assign a;
Select a pattern a (_, "x + 1")
11
5000
8 - pattern while
while w;
Select w pattern w ("call", _)
3
5000
9 - pattern if
if ifs;
Select ifs pattern ifs ("z", _, _)
12
5000
10 - calls
procedure p;
Select p such that Calls("proc1", p)
call, forwardEdge, another
5000
11 - calls*
procedure p;
Select p such that Calls*("proc1", p)
call, forwardEdge, another, last
5000
12 - next
stmt s;
Select s such that Next(12, s)
13, 14
5000
13 - select attributes
call cl;
Select cl.procName
forwardEdge, another, call, last
5000
14 - ModifiesP
procedure p;
Select p such that Modifies(p, "last")
proc1, another, last
5000
15 - UsesP
procedure p;
Select p such that Uses(p, "x")
proc1, call, forwardEdge
5000
